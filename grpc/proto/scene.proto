syntax = "proto3";

package omo.msp.scene;
option go_package= "organization";

service SceneService {
  rpc AddOne(ReqSceneAdd) returns (ReplySceneOne) {}
  rpc GetOne(RequestInfo) returns (ReplySceneOne) {}
  rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
  rpc GetList(ReqSceneList) returns (ReplySceneList) {}
  rpc UpdateBase(ReqSceneUpdate) returns (ReplySceneOne) {}
  rpc UpdateStatus(ReqSceneStatus) returns (ReplySceneOne) {}
  rpc AppendMember(ReqSceneMember) returns (ReplySceneMembers) {}
  rpc SubtractMember(ReqSceneMember) returns (ReplySceneMembers) {}
}

message SceneInfo {
  string uid = 1;
  uint64 id = 2;
  int64 created = 3;
  int64 updated = 4;
  string name = 5;
  int32 type = 6;
  int32 status = 7;
  string cover = 8;
  string master = 9;
  string remark = 10;
  string location = 11;
  repeated string members = 12;
}

enum ResultStatus {
  Success = 0;
  MaxLimit = 1;
  Repeated = 2;
  NotExisted = 3;
  DBException = 4;
  Empty = 5;
}

message RequestInfo {
  string uid = 1;
}

message ReplyInfo {
  string uid = 1;
  ResultStatus status = 2;
}

message ReqSceneAdd{
  string name = 1;
  int32 type = 2;
  string cover = 3;
  string master = 4;
  string remark = 5;
  string location = 6;
}

message ReplySceneOne{
  SceneInfo info = 1;
  ResultStatus status = 2;
}

message ReqSceneList{
  repeated string list = 1;
}

message ReplySceneList{
  repeated SceneInfo list = 1;
}

message ReqSceneUpdate{
  string uid = 1;
  string name = 2;
  string cover = 3;
  string remark = 4;
  string location = 5;
  string master = 6;
}

message ReqSceneStatus{
  string uid = 1;
  int32 status = 2;
}

message ReqSceneMember {
  string uid = 1;
  string member = 2;
}

message ReplySceneMembers {
  string uid = 1;
  repeated string members = 2;
  ResultStatus status = 3;
}